import time
import sys
import random

myScore = 0
compScore = 0

rps_dict = {"rock": 0, "paper": 1, "scissors": 2}
rps_reverse_dict = {0: "Rock", 1: "Paper", 2: "Scissors"}
rps_list = ["Rock", "Paper", "Scissors"]


def repeater(a, b):
    if a == gamesNum:
        print()
        print("You have won! Thanks for playing!")
        sys.exit()
    elif b == gamesNum:
        print()
        print("Oh no! The computer has won! Thanks for playing, though!")
        sys.exit()
    else:
        rockpaperscissors()


def who_wins(humanmove, computermove):
    global myScore
    global compScore
    if rps_dict[humanmove] == 0 and computermove == 1:
        print("I'm sorry, you lost! Better luck next time!")
        compScore += 1
    elif rps_dict[humanmove] == 1 and computermove == 2:
        print("I'm sorry, you lost! Better luck next time!")
        compScore += 1
    elif rps_dict[humanmove] == 2 and computermove == 0:
        print("I'm sorry, you lost! Better luck next time!")
        compScore += 1
    elif rps_dict[humanmove] == 1 and computermove == 0:
        print("Great job! You won! Keep the good luck coming!")
        myScore += 1
    elif rps_dict[humanmove] == 2 and computermove == 1:
        print("Great job! You won! Keep the good luck coming!")
        myScore += 1
    elif rps_dict[humanmove] == 0 and computermove == 2:
        print("Great job! You won! Keep the good luck coming!")
        myScore += 1
    else:
        print("It's a tie! Try again.")


def rockpaperscissors():
    print()
    print("Enter a move, or type score find out the score.")
    mymove = input().lower()
    compmove = random.randrange(0, 3)
    if str(mymove).lower() == "score":
        print("Player: %s" % myScore)
        print("Computer: %s" % compScore)
        rockpaperscissors()
    try:
        time.sleep(0.4)
        print("You played %s." % (rps_list[rps_dict[mymove]]))
        print("The computer played %s." % (rps_reverse_dict[compmove]))
        time.sleep(0.4)
        who_wins(mymove, compmove)
        repeater(myScore, compScore)
    except KeyError:
        print("That is not a valid move. Try again.")
        rockpaperscissors()


def games_num_gen(x):
    if x == 1:
        return 1
    else:
        return (int(x) * 2) - 1


def games_num_creator():
    global gamesNum
    gamesNum = 0
    while gamesNum < 1:
        try:
            gamesNum = int(input())
        except ValueError:
            print("That wasn't a valid number. Try again.")

print("Welcome to Rock, Paper, Scissors!")
time.sleep(2)
print("To start off, how many points should you have to win?")
games_num_creator()
time.sleep(0.4)
print("Great! Best %s out of %s, then." % (gamesNum, games_num_gen(gamesNum)))
rockpaperscissors()

